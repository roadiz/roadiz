{% set source = node.nodeSources.first %}
{% if source.title %}
    {% set name = source.title %}
{% else %}
    {% set name = node.nodeName %}
{% endif %}
{% set type = node.nodeType.name %}

{% set classes = [
type|lower,
'nodetree-element'
] %}

{% if nodeTree.canReorder %}
    {% set classes = classes|merge(['uk-nestable-item']) %}
{% else %}
    {% set classes = classes|merge(['non-nestable-list-item']) %}
{% endif %}

{% if not node.isHidingChildren and not node.nodeType.isHidingNodes %}
    {# Get children using EntityListManager for more control. #}
    {% set children = nodeTree.childrenNodes(node, true) %}
{% else %}
    {% set children = false %}
{% endif %}

{% if children|length > 0 %}
    {% set classes = classes|merge(['has-children']) %}
{% endif %}

{% set innerClasses = [
'nodetree-element-inner',
'uk-nestable-panel',
] %}
{% if node.isHome and node.isHidingChildren %}{% set innerClasses = innerClasses|merge(['home-stack']) %}{% endif %}
{% if node.isHome %}{% set innerClasses = innerClasses|merge(['home-node']) %}{% endif %}
{% if node.isHidingChildren %}{% set innerClasses = innerClasses|merge(['stack-node']) %}{% endif %}
{% if not node.isVisible %}{% set innerClasses = innerClasses|merge(['hidden-node']) %}{% endif %}
{% if not node.isPublished %}{% set innerClasses = innerClasses|merge(['unpublished-node']) %}{% endif %}
{% if not node.isArchived %}{% set innerClasses = innerClasses|merge(['archived-node']) %}{% endif %}
{% if not node.isLocked %}{% set innerClasses = innerClasses|merge(['locked-node']) %}{% endif %}
{% if nodeTree.isStackTree and node.nodeType.isPublishable and source.publishedAt %}
    {% set innerClasses = innerClasses|merge(['datetime-publishable']) %}
    {% if source.publishedAt > date() %}
        {% set innerClasses = innerClasses|merge(['datetime-publishable-future']) %}
    {% endif %}
{% endif %}


<li data-node-id="{{ node.getId }}" class="{{ classes|join(' ') }}">
    {% if not mainNodeTree and not nodeTree.isStackTree %}
        <span class="nodetree-list-item-color"></span>
    {% endif %}
    <div class="{{ innerClasses|join(' ') }}">
        <div class="{% if nodeTree.canReorder %}uk-nestable-handle{% else %}non-nestable-handle{% endif %}"
             {%- if not mainNodeTree and not nodeTree.isStackTree -%}
             title="{{ node.nodeType.displayName }}"
             data-uk-tooltip="{animation:true}"{%- endif -%}>
            {% if not mainNodeTree and not nodeTree.isStackTree %}
                {% set thumbnail = source.documentsByFields.first.document %}
                {% if thumbnail and (thumbnail.image or thumbnail.svg) and not thumbnail.private %}
                    <figure class="nodetree-element-img">
                        {{ thumbnail|display({"fit":"60x60", "quality":80}) }}
                    </figure>
                {% endif %}
            {% endif %}

            {% if node.isHidingChildren and not node.isHome %}
                <i class="uk-icon-folder"></i>
                <span class="icon-stack-folder"></span>
                <span class="icon-stack-folder icon-stack-folder-final"></span>
            {% endif %}
            {% if node.isHome and not node.isHidingChildren and not node.published %}
                <i class="uk-icon-rz-home-unpublished"></i>
            {% elseif node.isHome and not node.isHidingChildren %}
                <i class="uk-icon-rz-home"></i>
            {% elseif node.isHome and node.isHidingChildren %}
                <i class="uk-icon-rz-building"></i>
            {% endif %}
            {% if nodeTree.isStackTree and node.nodeType.isPublishable and source.publishedAt %}
                <div class="nodetree-published-at uk-badge"><i class="uk-icon-clock-o"></i> {{ source.publishedAt|localizeddate('short', 'none') }}</div>
            {% endif %}
        </div>

        <div class="tree-element-name nodetree-element-name"{% if nodeTree.translation is rtl %} dir="rtl"{% endif %}>
            {% if node.isHidingChildren %}
                <a href="{{ path('nodesTreePage', {
                    nodeId: node.id,
                    translationId: nodeTree.translation.id
                }) }}">{{- name -}}</a>
            {% else %}
                <a href="{{ path('nodesEditSourcePage', {
                    nodeId:node.id,
                    translationId: nodeTree.translation.id
                }) }}">{{- name -}}</a>
            {% endif %}
        </div>

        {% if nodeTree.isStackTree and node.tags|length %}
            <div class="nodetree-tags">
                {% for tag in node.tags %}
                    {% set ttag = tag.translatedTagsByTranslation(nodeTree.translation) %}
                    {% set tagName = ttag[0].name|default(tag.tagName) %}

                    <a href="?tagId={{ tag.id }}" class="uk-badge"><i class="uk-icon-tag"></i> {{ tagName -}}</a>
                {% endfor %}
            </div>
        {% endif %}

        {% if nodeTree.isStackTree %}
            <div class="nodetree-bulk-selection">
                <input class="node-checkbox" type="checkbox" name="bulk-selection[]" value="{{ node.getId }}" />
            </div>
        {% endif %}

        {% include 'widgets/nodeTree/contextualMenu.html.twig' with {
            'node': node
        } only %}

        {% if children %}
            <div class="minus" data-nestable-action="toggle"></div>
        {% endif %}
    </div>

    {% set subListClasses = ['uk-nestable-list'] %}
    {% if not mainNodeTree and not nodeTree.isStackTree %}
        {% set subListClasses = subListClasses|merge(['children-node-widget-list']) %}
    {% endif %}
    {% if node.isHidingChildren or node.nodeType.isHidingNodes or node.getChildren.count == 0 %}
        {% set subListClasses = subListClasses|merge(['empty']) %}
    {% endif %}
    {% spaceless %}
        {% if children %}
        <ul class="{{ subListClasses|join(' ') }}" data-parent-node-id="{{ node.getId }}">
            {#
             # For drag&drop ease, we don't create nested lists
             # We will have to check after OR inside drag status
             #}
                {% for subNode in children %}
                    {% include '@Rozier/widgets/nodeTree/singleNode.html.twig' with {
                    "node":subNode,
                    "parent":node,
                    "request":request,
                    "nodeTree":nodeTree,
                    "mainNodeTree":mainNodeTree,
                    "nodeStatuses":nodeStatuses
                    } only %}
                {% endfor %}
        </ul>
        {% endif %}
    {% endspaceless %}
</li>
